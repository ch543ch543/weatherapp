{"version":3,"sources":["assets/rain.svg","assets/cloudy.svg","assets/snowing.svg","assets/sun.svg","assets/thermometer.svg","assets/Spinner.gif","apis/api.js","components/Days/Days.js","components/Iconn/Icon.js","components/Temp/Temp.js","components/Date/Date.js","components/WeatherBody/WeatherBody.js","components/Loader/Loader.js","components/SearchBar/SearchBar.js","components/App.js","index.js"],"names":["module","exports","axios","create","baseURL","Days","props","className","day","Icon","icon","src","Cloudy","alt","Rain","Snowing","Sun","Fragment","Thermometer","description","Temp","minTemp","maxTemp","Date","date","WeatherBody","Loader","Spinner","msg","SearchBar","state","city","onSubmit","e","preventDefault","alert","key","searchCity","setState","onChange","target","name","value","this","type","id","placeholder","React","Component","App","cityy","a","get","daily","current","dailytemp","data","city_name","currenttemp","console","log","app_temp","isLoaded","map","el","valid_date","substr","parseInt","low_temp","max_temp","weather","code","currentweather","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.2dd6cb5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.5ff3dbf1.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.61164578.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowing.5fa9d007.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.36ef11dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.c25afb20.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.032bf6d9.gif\";","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.weatherbit.io/v2.0'\n})","import React from 'react';\nimport './Days.css';\n\nconst Days = props => {\n    return <div className =\"Days\"> \n        {props.day} \n        </div>\n}\n\nexport default Days","import React from 'react';\nimport './Icon.css'\nimport Cloudy from \"../../assets/cloudy.svg\"\nimport Rain from \"../../assets/rain.svg\"\nimport Snowing from \"../../assets/snowing.svg\"\nimport Sun from \"../../assets/sun.svg\"\nimport Thermometer from \"../../assets/thermometer.svg\"\n\nconst Icon = (props) => {\n    switch(props.icon) {\n        case 800:\n            return <img className='icon'src={Cloudy} alt={Cloudy} />\n            break;\n        case 801:\n            return <img className='icon'src={Cloudy} alt={Cloudy} />\n            break;\n        case 802:\n            return <img className='icon'src={Cloudy} alt={Cloudy} />\n            break;\n        case 803:\n            return <img className='icon'src={Cloudy} alt={Cloudy} />\n            break;\n        case 804:\n            return <img className='icon'src={Cloudy} alt={Cloudy} />\n            break;           \n        case 200:\n            return <img className='icon'src={Rain} alt={Rain} />\n            break;\n        case 201:\n            return <img className='icon'src={Rain} alt={Rain} />\n            break;\n        case 202:\n            return <img className='icon'src={Rain} alt={Rain} />\n            break;\n        case 502:\n            return <img className='icon'src={Rain} alt={Rain} />\n            break;\n        case 500:\n            return <img className='icon'src={Rain} alt={Rain} />\n            break;  \n        case 520:\n            return <img className='icon'src={Rain} alt={Rain} />\n            break;            \n        case 600:\n            return <img className='icon'src={Snowing} alt={Snowing} />\n            break;\n        case 601:\n            return <img className='icon'src={Snowing} alt={Snowing} />\n            break;\n        case 602:\n            return <img className='icon'src={Snowing} alt={Snowing} />\n            break;\n        case 610:\n            return <img className='icon'src={Snowing} alt={Snowing} />\n            break;         \n        case 'Sun':\n            return <img className='icon'src={Sun} alt={Sun} />\n            break;\n        default:\n            return <React.Fragment>\n                <img className='icon'src={Thermometer} alt={Thermometer} /> \n                <h5>{props.description}</h5>\n                </React.Fragment>\n    }\n}\n\nexport default Icon;","import React from 'react';\nimport './Temp.css';\n\nconst Temp = props => {\n    return <div className=\"Temp\">\n        <span className = \"min\">{props.minTemp}&#176;</span>    \n        <span className = \"max\">{props.maxTemp}&#176;</span>\n    </div>\n}\n\nexport default Temp;","import React from 'react';\nimport './Date.css' \n\nconst Date = props => {\n    return <div className=\"Date\">\n        {props.date}\n    </div>\n}\n\nexport default Date","import React from 'react';\nimport './WeatherBody.css';\nimport Days from '../Days/Days'\nimport Icon from '../Iconn/Icon'\nimport Temp from '../Temp/Temp'\nimport Date from '../Date/Date'\n\nconst WeatherBody = (props) => {\n    return (\n        <div className = \"WeatherBody card\">\n            <Date date={props.date} />\n            <Days day={props.day} />\n            <Icon icon={props.icon} />\n            <Temp minTemp={props.minTemp} maxTemp={props.maxTemp} />\n        </div>\n    )\n}\n\nexport default WeatherBody;\n"," import React from 'react';\n import './Loader.css';\n import Spinner from '../../assets/Spinner.gif'\n\n const Loader = (props) => {\n      return (\n        <div className='Loader'>\n            <img src={Spinner} alt={Spinner} />\n            <h6 className='text-center-mt-3'> {props.msg}</h6>\n        </div>\n      );\n }\n\n export default Loader;","import React from 'react';\nimport './SearchBar.css'\n\nclass SearchBar extends React.Component {\n    state = {\n        city: \"\"\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        if (this.state.city === \"\") {\n          alert(\"City can not be empty\");\n        } else if (e.key === 'Enter') {\n            this.props.searchCity(this.state.city);\n        } else {\n          this.props.searchCity(this.state.city);\n        }\n    \n        this.setState( {city: \"\"} )\n      };\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n        render() {\n            return (\n                <div className=\"SearchBar\">\n                    <div className=\"SearchBarChilds\">\n                        <h5 className=\"text-white\">Search Weather on your city</h5>\n                        <form onSubmit={this.onSubmit} className=\"formSearchCity\">\n                            <input type='text' name='city' id='inputsearchcity' onChange={this.onChange} placeholder='search city...' />\n                            <button type='submit' className='btn btn-outline-info text-white'>Search</button>\n                        </form>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n\nexport default SearchBar;","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"../apis/api\";\nimport WeatherBody from \"./WeatherBody/WeatherBody\";\nimport Loader from \"./Loader/Loader\";\nimport SearchBar from \"./SearchBar/SearchBar\";\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            dailytemp:[],\n            currenttemp: [],\n            city: 'search for a city',\n            isLoaded : false\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoaded: true})\n    }\n\n    // componentDidUpdate(){\n    //     WeatherBody.length('hourly?city=${this.state.city}&key=')\n    // }\n\n    searchCity = async cityy => {\n        \n        let daily = await axios\n        .get(`forecast/daily?city=${cityy}&key=4acd0858dcb94ec5a1dac6f0816b7148`)\n\n        let current = await axios\n        .get(`current?city=${cityy}&key=4acd0858dcb94ec5a1dac6f0816b7148`)\n\n            const dailytemp = daily.data.data;\n            const city = daily.data.city_name;\n            const currenttemp = current.data.data;\n            console.log(currenttemp);\n            \n            this.setState({\n                dailytemp: dailytemp,\n                currenttemp: currenttemp,\n                city: city\n             });\n             console.log(this.state.currenttemp[0].app_temp);\n    }\n\n    render() {\n        //methods\n\n        const date = this.state.dailytemp.map(el => {\n            return el.valid_date.substr(5,5)\n        });\n\n        const minTemp = this.state.dailytemp.map(el => {\n            return parseInt(el.low_temp)\n        })\n\n        const maxTemp = this.state.dailytemp.map(el => {\n            return parseInt(el.max_temp)\n        })\n\n        const icon = this.state.dailytemp.map(el => {\n            return el.weather.code\n        })\n\n        const description = this.state.currenttemp.map(el => {\n            return el.weather.description\n        })\n\n        const currentweather = this.state.currenttemp.map(el => {\n            return `${parseInt(el.app_temp)}°C`\n        })\n\n        \n\n        //loader\n        if(!this.state.isLoaded){\n            return <Loader msg={'loading...'} />\n        }\n        return (\n            <div className = \"App\">\n                <React.Fragment>\n                    <SearchBar searchCity={this.searchCity} city={this.state.city}/>  \n                    {/* searchCity及city是SearchBar.js的props */}\n                </React.Fragment>\n                <div className = \"weatherContainer py-3\">\n                    <div className='current'>\n                        <h5 className=\"cityName\"> {this.state.city} </h5>\n                        <p className='currentweather font-size: large'> {currentweather[0]} </p>\n                        <h6 className='descrip'> {description[0]} </h6>\n                    </div>\n                    <div className='daily'>\n                        <WeatherBody date={date[0]} day={'Mon'} icon={icon[0]} minTemp={minTemp[0]} maxTemp={maxTemp[0]} />\n                        <WeatherBody date={date[1]} day={'Tue'} icon={icon[1]} minTemp={minTemp[1]} maxTemp={maxTemp[1]} />\n                        <WeatherBody date={date[2]} day={'Wed'} icon={icon[2]} minTemp={minTemp[2]} maxTemp={maxTemp[2]} />\n                        <WeatherBody date={date[3]} day={'Thu'} icon={icon[3]} minTemp={minTemp[3]} maxTemp={maxTemp[3]} />\n                        <WeatherBody date={date[4]} day={'Fri'} icon={icon[4]} minTemp={minTemp[4]} maxTemp={maxTemp[4]} />\n                    </div>\n                </div>\n            </div>\n        )\n    };\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}